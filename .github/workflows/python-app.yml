Resources:
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: my-topic

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: my-function
      Runtime: python3.7
      Handler: index.handler
      Code:
        S3Bucket: my-bucket
        S3Key: my-function.zip
      Role: !GetAtt LambdaExecutionRole.Arn  #Assuming you have defined LambdaExecutionRole
      Events:
        MySNSTopic:
          Type: SNS
          Properties:
            Topic: !Ref SNSTopic

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaSNSPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref SNSTopic

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: my-table
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
